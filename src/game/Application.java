package game;

import java.util.Arrays;
import java.util.List;

import edu.monash.fit2099.engine.Display;
import edu.monash.fit2099.engine.FancyGroundFactory;
import edu.monash.fit2099.engine.GameMap;
import edu.monash.fit2099.engine.World;
import game.enemies.LordOfCinder;
import game.enemies.Undead;
import game.grounds.*;

/**
 * The main class for the Jurassic World game.
 *
 */
public class Application {

	public static void main(String[] args) {

//			World world = new World(new Display());
//
//			FancyGroundFactory groundFactory = new FancyGroundFactory(new Dirt(), new Wall(), new Floor(), new Valley());
//
//			List<String> map = Arrays.asList(
//					"..++++++..+++...........................++++......+++.................+++.......",
//					"........+++++..............................+++++++.................+++++........",
//					"...........+++.......................................................+++++......",
//					"........................................................................++......",
//					".........................................................................+++....",
//					"............................+.............................................+++...",
//					".............................+++.......++++.....................................",
//					".............................++.......+......................++++...............",
//					".............................................................+++++++............",
//					"..................................###___###...................+++...............",
//					"..................................#_______#......................+++............",
//					"...........++.....................#_______#.......................+.............",
//					".........+++......................#_______#........................++...........",
//					"............+++...................####_####..........................+..........",
//					"..............+......................................................++.........",
//					"..............++.................................................++++++.........",
//					"............+++...................................................++++..........",
//					"+..................................................................++...........",
//					"++...+++.........................................................++++...........",
//					"+++......................................+++........................+.++........",
//					"++++.......++++.........................++.........................+....++......",
//					"#####___#####++++......................+...............................+..+.....",
//					"_..._....._._#.++......................+...................................+....",
//					"...+.__..+...#+++...........................................................+...",
//					"...+.....+._.#.+.....+++++...++..............................................++.",
//					"___.......___#.++++++++++++++.+++.............................................++");
//			GameMap gameMap = new GameMap(groundFactory, map);
//			world.addGameMap(gameMap);
//
//			Actor player = new Player("Unkindled (Player)", '@', 100);
//			world.addPlayer(player, gameMap.at(38, 12));
//
//			// Place Yhorm the Giant/boss in the map
//			gameMap.at(6, 25).addActor(new LordOfCinder("Yhorm the Giant", 'Y', 500));
//
//			// Place a Hollow in the the map
//			// FIXME: the Undead should be generated from the Cemetery
//			gameMap.at(32, 7).addActor(new Undead("Undead"));
//			world.run();

		World world = new World(new Display());

		FancyGroundFactory groundFactory = new FancyGroundFactory(new Dirt(), new Wall(), new Floor(), new Valley(),
				  				           new Bonfire(), new Cemetery());

		List<String> map = Arrays.asList(
				"..++++++..+++...........................++++......+++.................+++.......",
				"........+++++..............................+++++++.................+++++........",
				"...........+++.......................................................+++++......",
				"........................................................................++......",
				"........................................................C................+++....",
				"............................+.............................................+++...",
				".............................+++.......++++.....................................",
				"................C............++.......+......................++++...............",
				".............................................................+++++++............",
				"..................................###___###...................+++...............",
				"..................................#_______#......................+++............",
				"...C.......++.....................#___B___#.......................+.............",
				".........+++......................#_______#........................++...........",
				"............+++...................####_####..........................+..........",
				"..............+......................................................++.........",
				"..............++.................................................++++++.........",
				"............+++...................................................++++..........",
				"+...................................................C..............++...........",
				"++...+++.........................................................++++...........",
				"+++......................C...............+++........................+.++........",
				"++++.......++++.........................++.........................+....++......",
				"#####___#####++++......................+...............................+..+.....",
				"_..._....._._#.++......................+...................................+....",
				"...+.__..+...#+++...........................................................+...",
				"...+.....+._.#.+.....+++++...++........................C.....................++.",
				"___.......___#.++++++++++++++.+++.............................................++");

		// testing
//		List<String> map = Arrays.asList(
//				"................................................................................",
//				"................................................................................",
//				"................................................................................",
//				"................................................................................",
//				"................................................................................",
//				"................................................................................",
//				"................................................................................",
//				"......................................C.........................................",
//				"................................................................................",
//				"..................................###___###.....................................",
//				"..................................#_______#.....................................",
//				"..................................#___B___#.....................................",
//				"..................................#__+____#.....................................",
//				"..................................####_####.....................................",
//				"................................................................................",
//				"................................................................................",
//				"................................................................................",
//				"................................................................................",
//				"................................................................................",
//				"................................................................................",
//				"................................................................................",
//				"#####___#####...................................................................",
//				"_..._....._._#..................................................................",
//				".....__......#..................................................................",
//				"..........._.#..................................................................",
//				"___.......___#..................................................................");

		GameMap gameMap = new GameMap(groundFactory, map);
		world.addGameMap(gameMap);

		Player player = new Player("Unkindled (Player)", '@', 100);
		world.addPlayer(player, gameMap.at(38, 12));
		// save the north location of first bonfire
		player.setLastBonfire(gameMap.at(38, 10));

		// Place Yhorm the Giant/boss in the map
		LordOfCinder lordOfCinder = new LordOfCinder("Yhorm the Giant", 'Y', 500);
		gameMap.at(6, 25).addActor(lordOfCinder);
		lordOfCinder.setInitialPosition(gameMap.at(6, 25));


		// Place a Hollow in the the map
		// FIXME: the Undead should be generated from the Cemetery
//		gameMap.at(32, 7).addActor(new Undead("Undead"));
		world.run();


	}
}
